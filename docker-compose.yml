services:
  db:
    image: postgres:latest
    container_name: cron_Postgres
    environment:
      POSTGRES_USER: postUser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cron_db
      PGDATABASE: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postCRON
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postUser"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
    container_name: cron_Django
    command: sh -c "python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: cron_Postgres
      DB_PORT: 5432
      DB_USER: postUser
      DB_PASSWORD: password
      DB_NAME: cron_db
      DJANGO_SETTINGS_MODULE: cron_project.settings
    networks:
      - postCRON

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cron_Admin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - postCRON

volumes:
  static_volume:
  postgres_data:
  pgadmin_data:

networks:
  postCRON:
    driver: bridge
